{% extends 'admin.html.twig' %}

{% block title %}Atempo Education!
{% endblock %}

{% block body %}
	{% set today = "now"|date("Y-m-d H:i", 'Europe/Paris') %}
	{% set nextEvents = [] %}

	{% if not is_granted('ROLE_TEACHER') %}
		{% for event in app.user.courses %}
			{% if event.start|date("Y-m-d H:i") >= today %}
				{% set nextEvents = nextEvents|merge([event]) %}
			{% endif %}
		{% endfor %}
		{% for event in app.user.events %}
			{% if event.start|date("Y-m-d H:i") >= today %}
				{% set nextEvents = nextEvents|merge([event]) %}
			{% endif %}
		{% endfor %}
		{% for event in app.user.evaluations %}
			{% if event.start|date("Y-m-d H:i") >= today %}
				{% set nextEvents = nextEvents|merge([event]) %}
			{% endif %}
		{% endfor %}
		{% if app.user.studentClasses is not null %}
			{% for studentClass in app.user.studentClasses %}
				{% for event in studentClass.courses %}
					{% if event.start|date("Y-m-d H:i") >= today %}
						{% set nextEvents = nextEvents|merge([event]) %}
					{% endif %}
				{% endfor %}
			{% endfor %}
		{% endif %}
	{% elseif is_granted('ROLE_TEACHER') %}
		{% for event in app.user.coursesteacher %}
			{% if event.start|date("Y-m-d H:i") >= today %}
				{% set nextEvents = nextEvents|merge([event]) %}
			{% endif %}
		{% endfor %}
		{% for event in app.user.events %}
			{% if event.start|date("Y-m-d H:i") >= today %}
				{% set nextEvents = nextEvents|merge([event]) %}
			{% endif %}
		{% endfor %}
		{% for event in app.user.evaluationsteacher %}
			{% if event.start|date("Y-m-d H:i") >= today %}
				{% set nextEvents = nextEvents|merge([event]) %}
			{% endif %}
		{% endfor %}
		{% if app.user.studentClasses is not null %}
			{% for studentClass in app.user.studentClasses %}
				{% for event in studentClass.courses %}
					{% if event.start|date("Y-m-d H:i") >= today %}
						{% set nextEvents = nextEvents|merge([event]) %}
					{% endif %}
				{% endfor %}
			{% endfor %}
		{% endif %}
	{% endif %}
	<div class="container-fluid">
		<div
			class="row">
			<!-- Colonne de gauche -->
			<div
				class="col-md-7 m-4 mt-5">
				<!-- Boutons arrondis -->
				<div class="card">
					<div class="card-body">
						<div id="calendar"></div>
					</div>
				</div>


				<!-- Carte pour le contenu "Actualité" -->
				<div class="card mb-4 card-shadow" style="border-radius: 15px;">
					<div class="card-body p-4 pb-0 text-black">
						<div>
							<h2 class="mb-4 primary-color font-weight-bold h3">
								<i class="bi bi-newspaper h3 me-1"></i>
								ACTUALITÉS</h2>
							<div class="d-flex align-items-center justify-content-between mb-3 border-top"></div>
						</div>
						{% if articles %}
							{% for article in articles|slice(0,2) %}
								<div class="my-3">
									<div class="d-flex align-items-center">
										<div class="flex-grow-1 ms-3">
											<div class="d-flex flex-row align-items-center mb-0 ms-4">
												<p class="h3 pe-3 primary-color">{{ article.name }}</p>
												<p class="text-muted text-secondary mb-0">créé le
													{{ article.createdAt|date("d M Y") }}</p>

											</div>
											{{ article.content|striptags|u.truncate(400, '...')|raw }}
										</div>
									</div>
									<a href="{{ path('app_secretariat_posts_details', {slug: article.slug}) }}" class="text-dark fw-bold mb-3">Lire la suite</a>
								</div>

							{% endfor %}
						{% else %}
							Aucune Actualité pour le moment. Revenez plus tard.
						{% endif %}
						<div class="border-top"></div>
						<a href="{{ path('app_secretariat_posts_home') }}">
							<p class="my-4 pb-1 text-center fw-bold fs-5">Toutes les actualités</p>
						</a>
					</div>
				</div>
			</div>
			<!-- Colonne de droite -->
			<div
				class="col-md-4 mt-5">
				<!-- Première boîte de droite -->
				<div class="card mb-4 card-shadow" style="border-radius: 15px;">
					<div class="card-body p-4 pb-0 text-black">
						<div>
							<h2 class="mb-4 primary-color font-weight-bold h3">
								<i class="bi bi-calendar3 h3 me-1"></i>
								AGENDA</h2>
							<div class="d-flex align-items-center justify-content-between mb-3 border-top"></div>
						</div>
						{% set nextEvents = nextEvents|sort((a, b) => a.start <=> b.start)|slice(0, 3) %}
						{% if nextEvents|length > 0 %}
							{% for event in nextEvents %}
								<a href="{{ path('app_calendar_courses_details',{id: event.id}) }}" style="color: {{ event.textcolor }}!important" class="">
									<div class="card mb-3" style="border-radius: 25px;">
										<div class="card-body p-4" style="border-radius: 25px; background: {{ event.backgroundcolor }}!important">
											<h3 class="mb-3 h4" style="border-radius: 15px; color: {{ event.textcolor }}!important">{{ event.name }}</h3>
											<p class="small mb-0" style="color: {{ event.textcolor }}!important">
												{{ event.start|format_datetime(pattern="eeee d MMM à HH'h'mm") }}
												<span class="mx-2">|</span>
												{% if event.room is not null %}
													Salle :
													{{ event.room.name }}</span>
											{% elseif event.zoomlink is not null %}
												A distanciel :
												<a href="{{ event.zoomlink }}" target="_blank" rel="noopener noreferrer">Lien Zoom</a>
											{% endif %}
										</p>
									</div>
								</div>
							</a>
						{% endfor %}
					{% else %}
						Vous n'avez aucun évènement prévu pour le moment. Revenez plus tard.
					{% endif %}
					<div class="border-top"></div>
					<a href="{{ path('app_secretariat_calendar_home') }}">
						<p class="my-4 pb-1 text-center fw-bold fs-5">Tout mon agenda</p>
					</a>
				</div>
			</div>
			<div class="card mb-4 card-shadow" style="border-radius: 15px;">
				<div class="card-body p-4 pb-0 text-black">
					<div>
						<h2 class="mb-4 primary-color font-weight-bold h3">
							<i class="bi bi-calendar3 h3 me-1"></i>
							Classes</h2>
						<div class="d-flex align-items-center justify-content-between mb-3 border-top"></div>
					</div>
					{% set classes = classes|sort((a, b) => a.start <=> b.start)|slice(0, 3) %}
					{% for classe in classes %}
						<a href="{{ path('app_secretariat_student_classes_details', {'id' : classe.id }) }}" class="text-black-50">
							<div class="card mb-3" style="border-radius: 15px;">
								<div class="card-body p-4">
									<h3 class="mb-3 primary-color h4">Classe : {{ classe.name }}</h3>
									<p class="small mb-0">
										Élèves : {{ classe.students|length }}
									</p>
								</div>
							</div>
						</a>
					{% endfor %}
					<div class="border-top"></div>
					<a href="{{ path('app_secretariat_student_classes_home') }}">
						<p class="my-4 pb-1 text-center fw-bold fs-5">Toutes les Classes</p>
					</a>
				</div>
			</div>
		</div>
	</div>

	<!-- Ajoutez l'élément HTML de la modal ici -->
    <div>
        <div class="modal fade first-modal" id="event-modal-details" tabindex="-1" aria-labelledby="event-modal-label" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="event-modal-label"></h5>
                            <div class="ms-auto">
                                <a href="#" class="btn btn-link edit-event me-2" data-event-id="" data-event-type=""><i class="bi bi-pencil event-icon-header"></i></a>
                                <button type="button" class="btn btn-link" data-bs-toggle="modal" data-bs-target="#deleteModal"><i class="bi bi-trash event-icon-header"></i></button>
                            </div>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
                    </div>
                    <div class="modal-body">
                        <p class="card-text"><i class="bi bi-circle-fill event-icon event-start"></i> <strong>Date de début : </strong><span id="event-start"></span></p>
                        <p class="card-text"><i class="bi bi-circle-fill event-icon event-end"></i> <strong>Date de fin : </strong><span id="event-end"></span></p>
                        <p class="card-text" id="event-room"></p>
                        <p class="card-text"><i class="bi bi-person event-icon"></i> <strong>Professeur : </strong><span id="event-teacher"></span></p>
                        <ul id="event-students" class="list-unstyled"></ul>
                        <p id="event-programmes" class="card-text"></p>
                        <p id="event-lecons" class="card-text"></p>
                        <hr>
                        <p class="card-text" id="commentaireObjectif"></p>
                    </div>
                    <div class="modal-footer">
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de confirmation de suppression -->
    <div class="modal fade" id="deleteModal" data-bs-keyboard="false" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered w-75 h-75">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirmation de suppression</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Êtes-vous sûr de vouloir supprimer cet événement ?</p>
                    <form id="deleteScopeForm">
                        <div class="mb-3">
                            <label for="deleteScope" class="form-label">Sélectionnez le scope :</label>
                            <select class="form-select" id="deleteScope" name="deleteScope">
                                <option value="this_event">Cet évènement</option>
                                <option value="all_events">Tous les événements</option>
                                <option value="future_events">Événements futurs uniquement</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn primary-custom-button" data-bs-dismiss="modal">Annuler</button>
                    <a href="#" class="btn btn-danger delete-event" data-event-type="" data-event-id="">Supprimer</a>
                </div>
            </div>
        </div>
    </div>
{% endblock %}


{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>
    <script src='https://cdn.jsdelivr.net/npm/@fullcalendar/bootstrap5@6.1.8/index.global.min.js'></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var calendarEl = document.getElementById('calendar');
            var pastDate = new Date();
            pastDate.setMonth(pastDate.getMonth() - 3);

            var calendar = new FullCalendar.Calendar(calendarEl, {
                themeSystem: 'bootstrap5',
                initialView: 'timeGridWeek',
                locale: 'Fr',
                firstDay: 1,
                allDaySlot: false,
                navLinks: true,
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    end: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'
                },
                height: '100vh',  
                views: {
                    dayGridMonth: {
                        dayHeaderFormat: { weekday: 'short' },
                        titleFormat: { year: 'numeric', month: 'long' },
                        eventDisplay: 'block',
                        eventContent: function(arg) {
                            return {
                                html: '<div class="fc-event-title">' + arg.event.title + '</div><div class="fc-event-time">' + formatTime(arg.event.start) + ' - ' + formatTime(arg.event.end) + '</div>'
                            };
                        }
                    },
                    timeGridWeek: {
                        dayHeaderFormat: { weekday: 'short' }
                    },
                    timeGridDay: {
                        dayHeaderFormat: { weekday: 'long' },
                        eventContent: function(arg) {
                            return {
                                html: '<div class="fc-event-title">' + arg.event.title + '</div><div class="fc-event-details">' + arg.event.extendedProps.teacher + '</div>'
                            };
                        }
                    }
                },
                buttonText:{
                    today: 'Aujourd\'hui',
                    month: 'Mois',
                    week: 'Semaine',
                    day: 'Jour',
                    list: 'Liste'
                },
                extraParams: function() {
                    return {
                        start: pastDate.toISOString(), // Date de début pour les événements passés
                    };
                },
                nowIndicator: true,
                events: {{ jsonEvents|raw }},
				eventClick: function(info) {
                    var eventId = info.event.extendedProps.uniqid;
                    $.ajax({
                        url: '{{ path('app_secretariat_calendar_courses_details_event') }}',
                        type: 'POST',
                        data: { eventId: eventId },
                        dataType: 'json',
                        success: function(response) {
                            var event = response.event;
                            // Mettre à jour les informations de l'événement dans la modal
                            $('#event-modal-label').text(event.title);
                            $('#event-title').text(event.title);
                            $('#event-start').text(event.start);
                            $('#event-end').text(event.end);
                            $('.edit-event').attr('data-event-id', event.id);
                            $('.edit-event').attr('data-event-type', event.type);
                            $('.delete-event').attr('data-event-id', event.id);
                            $('.delete-event').attr('data-event-type', event.type);
                            $('.export-event').attr('data-event-id', event.id);
                            $('.add-delay').attr('data-event-id', event.id);
                            $('.add-absence').attr('data-event-id', event.id);
                            $('#event-teacher').text(event.teacher);

                            if (event.recurrence === null || typeof event.recurrence === 'undefined') {
                                $('#deleteScopeForm').hide(); // Masquer le formulaire
                            } else {
                                $('#deleteScopeForm').show(); // Afficher le formulaire
                            }
                            // Ajouter la classe ou la liste d'élève
                            $('#event-students').empty(); // Vide le contenu de #event-students
                            if (event.studentClasses) {
                                addEventDetail('<i class="bi bi-card-list event-icon"></i> <strong>Classe : </strong>' + event.studentClasses);
                            } else if (event.students && event.students.length > 0) {
                                addEventDetail('<i class="bi bi-people event-icon"></i> <strong>Élèves : </strong>');
                                event.students.forEach(function(student) {
                                    addEventDetail(student);
                                });
                            } else {
                                addEventDetail('Aucun élève');
                            }
                            function addEventDetail(detail) {
                                var eventStudents = $('#event-students');
                                if (!eventStudents.find('.event-detail:contains("' + detail + '")').length) {
                                    $('<li>').addClass('event-detail').html(detail).appendTo(eventStudents);
                                }
                            }

                            // Afficher les informations de la salle de classe
                            if (event.room) {
                                $('#event-room').html('<i class="bi bi-geo-alt event-icon"></i> <strong>Salle de classe : </strong>' + event.room);
                            }                            
                            // Afficher le lien Zoom
                            if (event.zoomlink) {
                                $('#event-room').html('<i class="bi bi-link event-icon"></i> <strong> <a href="' + event.zoomlink +'" target="_blank">Lien Zoom </a> </strong>');
                            }

                            $('#event-programmes').empty();
                            if (event.programmes  && event.programmes.length > 0) {
                                addProgramme('<strong>Programmes : </strong>' + event.programmes.map(function(programme) {
                                    return '<a href="/programmes/' + programme.slug + '">' + programme.nom + '</a>';
                                }).join(', '));
                            } else {
                                addProgramme('Aucun programme affilié au cours')
                            }
                            function addProgramme(detail) {
                                var eventProgrammes = $('#event-programmes');
                                eventProgrammes.html(detail);
                            }

                            $('#event-lecons').empty();
                            if (event.lecons && event.lecons.length > 0) {
                                addLecons('<strong>Leçons : </strong>' + event.lecons.map(function(lecon) {
                                    return '<a href="/lecons/' + lecon.slug + '">' + lecon.nom + '</a>';
                                }).join(', '));
                            } else {
                                addLecons('Aucune leçon affilié au cours')
                            }
                            function addLecons(detail) {
                                var eventLecons = $('#event-lecons');
                                eventLecons.html(detail);
                            }


                            if (event.commentaire) {
                                addCommentaire('<i class="bi bi-chat-dots"></i> <strong>Commentaire : </strong> ' + event.commentaire)
                            } else if (event.objectif) {
                                addCommentaire('<i class="bi bi-chat-dots"></i> <strong>Objectif : </strong> ' + event.objectif)
                            } else {
                                addCommentaire('<i class="bi bi-chat-dots"></i> <strong>Aucun objectif ou commentaire pour le prochain cours</strong> ')
                            }
                            function addCommentaire(detail) {
                                var eventComObj = $('#commentaireObjectif');
                                eventComObj.html(detail);
                            }
                            
                            // Afficher la modal
                            $('#event-modal-details').modal('show');
                        },
                    });
                }
                });
            calendar.render();

            var urlParams = new URLSearchParams(window.location.search);
            var viewParam = urlParams.get('view');

            // Changez la vue en ListView si le paramètre "view" est "list"
            if (viewParam === 'list') {
                calendar.changeView('listWeek');
            }
        });

        function formatTime(time) {
            return time.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
        }

		$(document).on('click', '.edit-event', function(e) {
            e.preventDefault();
            var type = $(this).attr('data-event-type');
            var eventId = $(this).attr('data-event-id');
            if (type == 'cours') {
                var editUrl = '{{ path('app_secretariat_calendar_courses_modify', {'id': 'eventId'}) }}';
                editUrl = editUrl.replace('eventId', eventId);
                window.location.assign(editUrl);
            } else if ( type == 'evaluation') {
                var editUrl = '{{ path('app_secretariat_calendar_evaluation_modify', {'id': 'eventId'}) }}';
                editUrl = editUrl.replace('eventId', eventId);
                window.location.assign(editUrl);
            } else if (type == 'event') {
                var editUrl = '{{ path('app_secretariat_calendar_event_modify', {'id': 'eventId'}) }}';
                editUrl = editUrl.replace('eventId', eventId);
                window.location.assign(editUrl);
            }
        });

        $(document).on('click', '.delete-event', function(e) {
            e.preventDefault();
            var type = $(this).attr('data-event-type');
            var eventId = $(this).attr('data-event-id');
            if (type == 'cours') {
                var isScopeVisible = $('#deleteScopeForm').is(':visible'); // Vérifier si le formulaire de scope est affiché
                if (isScopeVisible) {
                    // Le formulaire de scope est visible, nous traitons en fonction du scope sélectionné
                    var selectedScope = $('#deleteScope').val(); // Récupérer la valeur du scope sélectionné dans le formulaire
                    if (selectedScope === 'this_event') {
                        // Suppression de l'événement actuel
                        var deleteUrl = '{{ path('app_secretariat_calendar_courses_delete', {'id': 'eventId'}) }}';
                    } else if (selectedScope === 'all_events') {
                        // Suppression de tous les événements
                        var deleteUrl = '{{ path('app_secretariat_calendar_courses_delete_all_courses', {'id': 'eventId'}) }}';
                    } else if (selectedScope === 'future_events') {
                        // Suppression des événements futurs uniquement
                        var deleteUrl = '{{ path('app_secretariat_calendar_courses_delete_future_courses', {'id': 'eventId'}) }}';
                    } else {
                        // Valeur de scope non reconnue
                        console.error('Valeur de scope non reconnue : ' + selectedScope);
                        return;
                    }
                } else {
                    // Le formulaire de scope n'est pas visible, nous utilisons le chemin de suppression classique
                    var deleteUrl = '{{ path('app_secretariat_calendar_courses_delete', {'id': 'eventId'}) }}';
                }
                // Remplacer 'eventId' dans l'URL de suppression par l'ID de l'événement
                deleteUrl = deleteUrl.replace('eventId', eventId);
                // Rediriger vers l'URL appropriée pour effectuer la suppression
                window.location.assign(deleteUrl);
            } else if ( type == 'evaluation') {
                var deleteUrl = '{{ path('app_secretariat_calendar_evaluation_delete', {'id': 'eventId'}) }}';
                // Remplacer 'eventId' dans l'URL de suppression par l'ID de l'événement
                deleteUrl = deleteUrl.replace('eventId', eventId);
                // Rediriger vers l'URL appropriée pour effectuer la suppression
                window.location.assign(deleteUrl);
            } else if (type == 'event') {
                var deleteUrl = '{{ path('app_secretariat_calendar_event_delete', {'id': 'eventId'}) }}';
                // Remplacer 'eventId' dans l'URL de suppression par l'ID de l'événement
                deleteUrl = deleteUrl.replace('eventId', eventId);
                // Rediriger vers l'URL appropriée pour effectuer la suppression
                window.location.assign(deleteUrl);
            }
        });

        $('.btn-close').on('click', function () {
            $('#event-modal-details').hide("fast", function (){
                $('.first-modal').removeClass('show');
            });
        });

        $('#deleteModal').on('shown.bs.modal', function () {
            $('.first-modal').addClass('modal-backdrop');
        });

        $('#deleteModal').on('hidden.bs.modal', function () {
            $('.first-modal').removeClass('modal-backdrop');
        });

    </script>
{% endblock %}

